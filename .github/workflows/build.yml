name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: List files in root directory
        run: ls

      - name: List files in src directory
        run: ls -la src

      - name: Find all directories
        run: find . -type d

      - name: Build project with Gradle
        run: ./gradle build --info
        working-directory: ./

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: careercraft-jar
          path: build/libs/*.jar

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_USER: 'ubuntu'
          EC2_HOST: '44.203.152.52'
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST <<EOF
          sudo rm -f /home/ubuntu/careercraft-0.0.1-SNAPSHOT-new.jar
          EOF
          
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no build/libs/careercraft-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/ubuntu/
          
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST <<EOF
          sudo mv /home/ubuntu/careercraft-0.0.1-SNAPSHOT.jar /home/ubuntu/careercraft-0.0.1-SNAPSHOT-new.jar
          sudo systemctl restart careercraft.service
          EOF

  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build  # Указывает, что этот job должен выполниться после build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full clone for accurate analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew sonarqube