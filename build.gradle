plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '5.0.9'
    id "org.sonarqube" version "5.0.0.4638"
    id "de.aaschmid.cpd" version "3.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation 'org.jetbrains:annotations:24.0.0'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.2'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.security:spring-security-crypto:6.2.1'
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0-M2'
    implementation("org.mapstruct:mapstruct:1.4.2.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.4.2.Final")
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'org.webjars.npm', name: 'chart.js', version: '4.4.3'
    implementation group: 'org.webjars.npm', name: 'react', version: '19.0.0-canary-fd0da3eef-20240404'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.1.0'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-loadbalancer', version: '4.1.1'
    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '13.2.1'
    implementation 'io.github.openfeign:feign-gson:11.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    spotbugs 'com.github.spotbugs:spotbugs:4.7.3'
    implementation group: 'com.puppycrawl.tools', name: 'checkstyle', version: '10.18.0'
    // https://mvnrepository.com/artifact/net.sourceforge.pmd/pmd
    implementation group: 'net.sourceforge.pmd', name: 'pmd', version: '7.4.0', ext: 'pom'

}




checkstyle {
    toolVersion = '10.18.0' // или актуальная версия Checkstyle
    config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
}


pmd {
    toolVersion = '7.4.0'
    ruleSets = [] // Оставьте пустым, так как мы будем использовать пользовательский файл конфигурации
    ruleSetFiles = files('config/pmd-ruleset.xml') // Укажите путь к вашему файлу конфигурации
}


spotbugs {
    toolVersion = '4.7.3'
    ignoreFailures = false
}

tasks.named('check') {
    dependsOn 'checkstyleMain', 'pmdMain', 'spotbugsMain'
}

cpd {
    minimumTokenCount = 50
    ignoreFailures = true
    language = 'java'
}

cpd {
    minimumTokenCount = 50 // Минимальное количество токенов для обнаружения дубликатов
    language = 'java' // Язык кода, который анализируется
    ignoreAnnotations = true // Игнорировать аннотации
    ignoreLiterals = true // Игнорировать строковые литералы
    ignoreIdentifiers = true // Игнорировать идентификаторы переменных и методов
}

tasks.withType(Copy).configureEach {
    if (name == 'cpdCheck') {
        reports {
            xml.required.set(true)
            xml.outputLocation.set(file("/reports/cpd/cpd.xml"))
            text.required.set(true)
            text.outputLocation.set(file("/reports/cpd/cpd.txt"))
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

