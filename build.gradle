plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.5'
    id "de.aaschmid.cpd" version "3.3"
    id "org.sonarqube" version "5.0.0.4638"
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation 'org.jetbrains:annotations:24.0.0'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.2'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.security:spring-security-crypto:6.2.1'
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0-M2'
    implementation("org.mapstruct:mapstruct:1.4.2.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.4.2.Final")
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    implementation 'org.webjars.npm:chart.js:4.4.3'
    implementation 'org.webjars.npm:react:19.0.0-canary-fd0da3eef-20240404'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.1.0'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-loadbalancer', version: '4.1.1'
    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '13.2.1'
    implementation 'io.github.openfeign:feign-gson:11.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

tasks.named('test') {
    useJUnitPlatform()
}

// CPD configuration
cpd {
    minimumTokenCount = 50
    ignoreFailures = true
    language = 'java'
    ignoreAnnotations = true
    ignoreLiterals = true
    ignoreIdentifiers = true
}

// SonarQube configuration
sonar {
    properties {
        property "sonar.projectKey", "sonaqube"
        property "sonar.projectName", "sonaqube"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_5f26d5bd4d20d55c5e3b1536ea38b2c62a178483"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }



    jacoco {
        toolVersion = "0.8.8"
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport // Генерация отчета после выполнения тестов
    }

    jacocoTestReport {
        dependsOn test // Обеспечьте выполнение тестов до генерации отчета
        reports {
            xml.required = true
            html.required = true
        }

    }


}